@inherits FeedbackComponent<Character?>
<Form Model="@model" LabelColSpan="4" WrapperColSpan="20" @ref="formRef" ValidateMode="@FormValidateMode.Complex">
    <GenerateFormItem NotGenerate="@(x=> x == "Id")" />
    <FormItem Label="选择标签">
        <Popover Placement="Placement.Right" Title="标签" Trigger="@(new[] { AntDesign.Trigger.Click })">
            <ContentTemplate>
                <TagPanel @bind-LabelTags="model.LabelTags" LabelTagStatus="LabelStatus.人物标签"></TagPanel>
            </ContentTemplate>
            <ChildContent>
                <Button>选择标签</Button>
            </ChildContent>
        </Popover>
        <div>
            @if (model.LabelTags is { Length: > 0 })
            {
                foreach (var t in model.LabelTags)
                {
                    <Tag Color="t.Color">@t.Name</Tag>
                } 
            }
        </div>
    </FormItem>

    <FormItem Label="添加体系">
        <Switch OnChange="OnSwitch" @bind-Checked="switchValue"></Switch>
    </FormItem>
</Form>
@code {
    private Form<Character> formRef;
    Character model = new();
    bool switchValue { set; get; }
    
    protected override void OnInitialized()
    {
        model = Options ?? new();
        switchValue = model.CombatPower!=null;
    }
    
    private void OnSwitch(bool b)
    {
        if (b)
            model.CombatPower = new();
        else model.CombatPower = null;
    }
    
    public override Task OnFeedbackOkAsync(ModalClosingEventArgs args)
    {
        if (!formRef.Validate())
            args.Cancel = true;
        else
        {
            formRef.Submit();
            Db.UpdateOrInsert(model);
        }
        return base.OnFeedbackOkAsync(args);
    }
}