@page "/"
@using DailyDaGang.Model

<GridRow>
    <GridCol Span="4">
        <Card Style="height: 90vh;overflow:auto;">
            <Title Level="5" Style="margin-left: 30px">选项卡</Title>
            <Tree
                SwitcherIcon="null"
                DefaultExpandAll
                BlockNode
                DataSource="list"
                TitleExpression="x => x.DataItem.Title"
                KeyExpression="x => x.DataItem.Id.ToString()"
                @bind-SelectedData="selectKey"
                Style="font-size: 15px;">
            </Tree>
        </Card>
    </GridCol>
    <GridCol Span="14">
        <Card Style="height: 90vh">
            <Row Style="margin-bottom: 5px">
                <Space>
                    <SpaceItem>
                        <AntDesign.Input TValue="string" Style="font-size: 16px;font-weight: bold" ReadOnly="@isShow" @bind-Value="@selectKey.Title">
                            <AddOnBefore><div style="font-size: 16px">标题</div></AddOnBefore>
                        </AntDesign.Input>
                    </SpaceItem>
                    <SpaceItem>
                        <Button OnClick="SetShow" Color="Color.Green6">
                            @{ var btn = isShow ? "编辑" : "保存"; }
                            @btn
                        </Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Button Color="Color.Blue6" OnClick="AddDaGang">新建</Button>
                    </SpaceItem>
                </Space>
            </Row>
            <TextArea @bind-Value="@selectKey.LongContent" style="font-size: 16px;padding: 0px;height: 80vh" ShowCount readonly="@isShow"></TextArea>
        </Card>
    </GridCol>
    <GridCol Span="6">
        <GridRow>
            <GridCol Span="24">
                <Card Title="文献" Style="padding: 10px">
                    <Extra>
                        <Button Color="Color.Blue6" OnClick="()=>AddKnowLedge(null)">添加文献</Button>
                    </Extra>
                    <ChildContent>
                        @foreach (var item in knowledges)
                        {
                            <Popover Placement="Placement.LeftBottom" Title="@item.Title" Trigger="new[] { AntDesign.Trigger.Click }">
                                <ContentTemplate>
                                    <div class="pre-line">
                                        <span>@item.Content</span>
                                        <Button Type="ButtonType.Link" OnClick="()=>AddKnowLedge(item)">编辑</Button>
                                    </div>
                                </ContentTemplate>
                                <ChildContent>
                                    <Button style="margin: 5px">
                                        @item.Title
                                    </Button>
                                </ChildContent>
                            </Popover>   
                        }
                    </ChildContent>
                </Card>
            </GridCol>
            <GridCol Span="24">
            </GridCol>
        </GridRow>
    </GridCol>
</GridRow>
@code {
    DaGang selectKey { set; get; }=new();
    bool isShow = true;
    List<DaGang> list { set; get; } = [];
    List<Knowledge> knowledges = [];
    
    protected override void OnInitialized()
    {
        list = Db.GetList<DaGang>();
        selectKey = list.FirstOrDefault()??new();
        knowledges = Db.GetList<Knowledge>();
    }
    
    private void SetShow()
    { 
        if(!isShow)
            SaveDagang();
        isShow = !isShow;
    } 

    private void AddDaGang()
    {
        isShow = !isShow;
        selectKey = new();
    }

    private void SaveDagang()
    {
        if (!string.IsNullOrWhiteSpace(selectKey.LongContent) && !string.IsNullOrWhiteSpace(selectKey.Title))
        {
            Db.Execute(x => x.GetCollection<DaGang>().Upsert(selectKey));
            list = Db.GetList<DaGang>();
        }
    }

    /// <summary>
    /// 添加文献
    /// </summary>
    private void AddKnowLedge(Knowledge? knowledge)
    {
        var modal = ModalInfo.CreateModal<KnowledgeForm, Knowledge?>(knowledge, "文献",modalService);
        modal.OnOk = async () =>
        {
            knowledges = Db.GetList<Knowledge>();
            StateHasChanged();
        };
    }
}
<style scoped>
    .ant-tree-switcher{
        width: 0px;
        line-height: 0px;
    }
    .ant-tree .ant-tree-node-content-wrapper{
        line-height: 36px;
    }
</style>